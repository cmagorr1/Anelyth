Parsed file: Server/temp-file-upload/unit-11-authentication/client/config/keys.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "google"
              },
              "computed": false,
              "value": {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "clientID"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": "374494553320-t78rnbt3lers064fvbho69nvmgimiure.apps.googleusercontent.com",
                      "raw": "'374494553320-t78rnbt3lers064fvbho69nvmgimiure.apps.googleusercontent.com'"
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "clientSecret"
                    },
                    "computed": false,
                    "value": {
                      "type": "Literal",
                      "value": "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",
                      "raw": "'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'"
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  }
                ]
              },
              "kind": "init",
              "method": false,
              "shorthand": false
            }
          ]
        }
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/client/scripts/secret.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "secrets"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "document"
              },
              "property": {
                "type": "Identifier",
                "name": "querySelector"
              }
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "#secrets",
                "raw": "'#secrets'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "fetch"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "/secret/users",
                    "raw": "'/secret/users'"
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "name": "then"
              }
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "res"
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "res"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "json"
                    }
                  },
                  "arguments": []
                },
                "generator": false,
                "expression": true,
                "async": false
              }
            ]
          },
          "property": {
            "type": "Identifier",
            "name": "then"
          }
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "data"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "users"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "data"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "users"
                        }
                      }
                    }
                  ],
                  "kind": "const"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "users"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "forEach"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrowFunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "user"
                          }
                        ],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "userListItem"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "document"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createElement"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "li",
                                        "raw": "'li'"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "const"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "userListItem"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "appendChild"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "document"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createTextNode"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "TemplateLiteral",
                                        "quasis": [
                                          {
                                            "type": "TemplateElement",
                                            "value": {
                                              "raw": "",
                                              "cooked": ""
                                            },
                                            "tail": false
                                          },
                                          {
                                            "type": "TemplateElement",
                                            "value": {
                                              "raw": ": ",
                                              "cooked": ": "
                                            },
                                            "tail": false
                                          },
                                          {
                                            "type": "TemplateElement",
                                            "value": {
                                              "raw": "",
                                              "cooked": ""
                                            },
                                            "tail": true
                                          }
                                        ],
                                        "expressions": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "user"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "username"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "user"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "password"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "secrets"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "appendChild"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "userListItem"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "generator": false,
                        "expression": false,
                        "async": false
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/server/controllers/cookieController.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "cookieController"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "cookieController"
          },
          "property": {
            "type": "Identifier",
            "name": "setCookie"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "randomNumber"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Math"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "floor"
                        }
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "*",
                          "left": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Math"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "random"
                              }
                            },
                            "arguments": []
                          },
                          "right": {
                            "type": "Literal",
                            "value": 100,
                            "raw": "100"
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "res"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "cookie"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "codesmith",
                      "raw": "'codesmith'"
                    },
                    {
                      "type": "Literal",
                      "value": "hi",
                      "raw": "'hi'"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "res"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "cookie"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "secret",
                      "raw": "'secret'"
                    },
                    {
                      "type": "Identifier",
                      "name": "randomNumber"
                    },
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "httpOnly"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "next"
                  },
                  "arguments": []
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "cookieController"
          },
          "property": {
            "type": "Identifier",
            "name": "setSSIDCookie"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "res"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "cookie"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "ssid",
                      "raw": "'ssid'"
                    },
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locals"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "user"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_id"
                      }
                    },
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "httpOnly"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "next"
                  },
                  "arguments": []
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "cookieController"
        }
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/server/controllers/sessionController.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Session"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../models/sessionModel",
                "raw": "'../models/sessionModel'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "sessionController"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "sessionController"
          },
          "property": {
            "type": "Identifier",
            "name": "isLoggedIn"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "TryStatement",
                "block": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "sessionCookie"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "req"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cookies"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ssid"
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "Identifier",
                          "name": "sessionCookie"
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "next"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "session"
                          },
                          "init": {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Session"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "findById"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "sessionCookie"
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "res"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "locals"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "session"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "session"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "next"
                        },
                        "arguments": []
                      }
                    }
                  ]
                },
                "handler": {
                  "type": "CatchClause",
                  "param": {
                    "type": "Identifier",
                    "name": "error"
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "console"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "log"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "error"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "finalizer": null
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": true
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "sessionController"
          },
          "property": {
            "type": "Identifier",
            "name": "startSession"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "userId"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "locals"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "user"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_id"
                      }
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "newSession"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Session"
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "cookieId"
                              },
                              "computed": false,
                              "value": {
                                "type": "Identifier",
                                "name": "userId"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "const"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AwaitExpression",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "newSession"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "save"
                      }
                    },
                    "arguments": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "res"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "cookie"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "ssid",
                      "raw": "'ssid'"
                    },
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "newSession"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_id"
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "next"
                  },
                  "arguments": []
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": true
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "sessionController"
        }
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/server/controllers/userController.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "User"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../models/userModel",
                "raw": "'../models/userModel'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "bcrypt"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "bcryptjs",
                "raw": "'bcryptjs'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "userController"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": []
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "userController"
          },
          "property": {
            "type": "Identifier",
            "name": "getAllUsers"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "User"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "find"
                    }
                  },
                  "arguments": [
                    {
                      "type": "ObjectExpression",
                      "properties": []
                    },
                    {
                      "type": "ArrowFunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        },
                        {
                          "type": "Identifier",
                          "name": "users"
                        }
                      ],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "next"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "Error in userController.getAllUsers: ",
                                      "raw": "'Error in userController.getAllUsers: '"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "JSON"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "stringify"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "err"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "res"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "locals"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "users"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "users"
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "next"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "userController"
          },
          "property": {
            "type": "Identifier",
            "name": "createUser"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "TryStatement",
                "block": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ObjectPattern",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "username"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "username"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "password"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "password"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                              }
                            ]
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "req"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "body"
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "Identifier",
                                "name": "username"
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "Identifier",
                                "name": "password"
                              },
                              "prefix": true
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "username"
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "Literal",
                              "value": "string",
                              "raw": "'string'"
                            }
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "!==",
                          "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "Identifier",
                              "name": "password"
                            },
                            "prefix": true
                          },
                          "right": {
                            "type": "Literal",
                            "value": "string",
                            "raw": "'string'"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Error"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "Invalid username or password",
                                      "raw": "'Invalid username or password'"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "const"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "status"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 400,
                                "raw": "400"
                              }
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "next"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "err"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "newUser"
                          },
                          "init": {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "User"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "create"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "username"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Identifier",
                                        "name": "username"
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": true
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "password"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Identifier",
                                        "name": "password"
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": true
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "res"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "locals"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "user"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "newUser"
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "next"
                        },
                        "arguments": []
                      }
                    }
                  ]
                },
                "handler": {
                  "type": "CatchClause",
                  "param": {
                    "type": "Identifier",
                    "name": "error"
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "init": {
                              "type": "SequenceExpression",
                              "expressions": [
                                {
                                  "type": "Literal",
                                  "value": "Error in userController.creatreUser",
                                  "raw": "'Error in userController.creatreUser'"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "error"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "const"
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "next"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "err"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "finalizer": null
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": true
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "userController"
          },
          "property": {
            "type": "Identifier",
            "name": "verifyUser"
          }
        },
        "right": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "TryStatement",
                "block": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "ObjectPattern",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "username"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "username"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "password"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "password"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": true
                              }
                            ]
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "req"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "body"
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "user"
                          },
                          "init": {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "User"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "findOne"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "username"
                                      },
                                      "computed": false,
                                      "value": {
                                        "type": "Identifier",
                                        "name": "username"
                                      },
                                      "kind": "init",
                                      "method": false,
                                      "shorthand": true
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "Identifier",
                          "name": "user"
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "res"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "redirect"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "/signup",
                                  "raw": "'/signup'"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "passMatch"
                          },
                          "init": {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "bcrypt"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "compare"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "password"
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "user"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "password"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "kind": "const"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "Identifier",
                          "name": "passMatch"
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "res"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "redirect"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "/signup",
                                  "raw": "'/signup'"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "res"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "locals"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "user"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "user"
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "next"
                        },
                        "arguments": []
                      }
                    }
                  ]
                },
                "handler": {
                  "type": "CatchClause",
                  "param": {
                    "type": "Identifier",
                    "name": "error"
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "next"
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "log"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "Literal",
                                    "value": "Error in userController.verifyUser",
                                    "raw": "'Error in userController.verifyUser'"
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "status"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "Literal",
                                    "value": 500,
                                    "raw": "500"
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "message"
                                  },
                                  "computed": false,
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "err"
                                        },
                                        "computed": false,
                                        "value": {
                                          "type": "Literal",
                                          "value": "Can not verify user",
                                          "raw": "'Can not verify user'"
                                        },
                                        "kind": "init",
                                        "method": false,
                                        "shorthand": false
                                      }
                                    ]
                                  },
                                  "kind": "init",
                                  "method": false,
                                  "shorthand": false
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "finalizer": null
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": true
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "userController"
        }
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/server/models/sessionModel.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "mongoose"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "mongoose",
                "raw": "'mongoose'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Schema"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "mongoose"
            },
            "property": {
              "type": "Identifier",
              "name": "Schema"
            }
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "sessionSchema"
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Schema"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "cookieId"
                    },
                    "computed": false,
                    "value": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "type"
                          },
                          "computed": false,
                          "value": {
                            "type": "Identifier",
                            "name": "String"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "required"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "unique"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        }
                      ]
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "createdAt"
                    },
                    "computed": false,
                    "value": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "type"
                          },
                          "computed": false,
                          "value": {
                            "type": "Identifier",
                            "name": "Date"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "expires"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": 60,
                            "raw": "60"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "default"
                          },
                          "computed": false,
                          "value": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Date"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "now"
                            }
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        }
                      ]
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "mongoose"
            },
            "property": {
              "type": "Identifier",
              "name": "model"
            }
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "Session",
              "raw": "'Session'"
            },
            {
              "type": "Identifier",
              "name": "sessionSchema"
            }
          ]
        }
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/server/models/userModel.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "mongoose"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "mongoose",
                "raw": "'mongoose'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Schema"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "mongoose"
            },
            "property": {
              "type": "Identifier",
              "name": "Schema"
            }
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "SALT_WORK_FACTOR"
          },
          "init": {
            "type": "Literal",
            "value": 10,
            "raw": "10"
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "bcrypt"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "bcryptjs",
                "raw": "'bcryptjs'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "userSchema"
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Schema"
            },
            "arguments": [
              {
                "type": "ObjectExpression",
                "properties": [
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "username"
                    },
                    "computed": false,
                    "value": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "type"
                          },
                          "computed": false,
                          "value": {
                            "type": "Identifier",
                            "name": "String"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "required"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "unique"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        }
                      ]
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  },
                  {
                    "type": "Property",
                    "key": {
                      "type": "Identifier",
                      "name": "password"
                    },
                    "computed": false,
                    "value": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "type"
                          },
                          "computed": false,
                          "value": {
                            "type": "Identifier",
                            "name": "String"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "required"
                          },
                          "computed": false,
                          "value": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          },
                          "kind": "init",
                          "method": false,
                          "shorthand": false
                        }
                      ]
                    },
                    "kind": "init",
                    "method": false,
                    "shorthand": false
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "userSchema"
          },
          "property": {
            "type": "Identifier",
            "name": "pre"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "save",
            "raw": "'save'"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "next"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "isModified"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "password",
                          "raw": "'password'"
                        }
                      ]
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "next"
                      },
                      "arguments": []
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "password"
                      }
                    },
                    "right": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "bcrypt"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "hash"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "password"
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "SALT_WORK_FACTOR"
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "next"
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": true
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "mongoose"
            },
            "property": {
              "type": "Identifier",
              "name": "model"
            }
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "User",
              "raw": "'User'"
            },
            {
              "type": "Identifier",
              "name": "userSchema"
            }
          ]
        }
      }
    }
  ],
  "sourceType": "script"
}

Parsed file: Server/temp-file-upload/unit-11-authentication/server/server.js
AST:
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "express"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "express",
                "raw": "'express'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "path"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "path",
                "raw": "'path'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "cookieParser"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "cookie-parser",
                "raw": "'cookie-parser'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "mongoose"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "mongoose",
                "raw": "'mongoose'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "userController"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./controllers/userController",
                "raw": "'./controllers/userController'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "cookieController"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./controllers/cookieController",
                "raw": "'./controllers/cookieController'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "sessionController"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./controllers/sessionController",
                "raw": "'./controllers/sessionController'"
              }
            ]
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "PORT"
          },
          "init": {
            "type": "Literal",
            "value": 3000,
            "raw": "3000"
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "app"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "express"
            },
            "arguments": []
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "mongoURI"
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "process"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "env"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "NODE_ENV"
                }
              },
              "right": {
                "type": "Literal",
                "value": "test",
                "raw": "'test'"
              }
            },
            "consequent": {
              "type": "Literal",
              "value": "mongodb://localhost/unit11test",
              "raw": "'mongodb://localhost/unit11test'"
            },
            "alternate": {
              "type": "Literal",
              "value": "mongodb://localhost/unit11dev",
              "raw": "'mongodb://localhost/unit11dev'"
            }
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "mongoose"
          },
          "property": {
            "type": "Identifier",
            "name": "connect"
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "mongoURI"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "use"
          }
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "express"
              },
              "property": {
                "type": "Identifier",
                "name": "json"
              }
            },
            "arguments": []
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "use"
          }
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "express"
              },
              "property": {
                "type": "Identifier",
                "name": "urlencoded"
              }
            },
            "arguments": []
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "use"
          }
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "cookieParser"
            },
            "arguments": []
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "use"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/client",
            "raw": "'/client'"
          },
          {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "express"
              },
              "property": {
                "type": "Identifier",
                "name": "static"
              }
            },
            "arguments": [
              {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "path"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "resolve"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "__dirname"
                  },
                  {
                    "type": "Literal",
                    "value": "../client",
                    "raw": "'../client'"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "get"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/",
            "raw": "'/'"
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "cookieController"
            },
            "property": {
              "type": "Identifier",
              "name": "setCookie"
            }
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sendFile"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "path"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "resolve"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "__dirname"
                          },
                          {
                            "type": "Literal",
                            "value": "../client/index.html",
                            "raw": "'../client/index.html'"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "get"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/signup",
            "raw": "'/signup'"
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sendFile"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "path"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "resolve"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "__dirname"
                          },
                          {
                            "type": "Literal",
                            "value": "../client/signup.html",
                            "raw": "'../client/signup.html'"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "post"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/signup",
            "raw": "'/signup'"
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "userController"
            },
            "property": {
              "type": "Identifier",
              "name": "createUser"
            }
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "cookieController"
            },
            "property": {
              "type": "Identifier",
              "name": "setSSIDCookie"
            }
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "sessionController"
            },
            "property": {
              "type": "Identifier",
              "name": "startSession"
            }
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "redirect"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/secret",
                        "raw": "'/secret'"
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "post"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/login",
            "raw": "'/login'"
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "userController"
            },
            "property": {
              "type": "Identifier",
              "name": "verifyUser"
            }
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "cookieController"
            },
            "property": {
              "type": "Identifier",
              "name": "setSSIDCookie"
            }
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "sessionController"
            },
            "property": {
              "type": "Identifier",
              "name": "startSession"
            }
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "locals"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "user"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "redirect"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "/signup",
                          "raw": "'/signup'"
                        }
                      ]
                    }
                  },
                  "alternate": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "res"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "status"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 200,
                              "raw": "200"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "send"
                        }
                      },
                      "arguments": [
                        {
                          "type": "TemplateLiteral",
                          "quasis": [
                            {
                              "type": "TemplateElement",
                              "value": {
                                "raw": "\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  </head>\n  <body>\n    <p>Logged In Successfully!</p>\n    <button onclick=\"window.location.href='/secret'\">Check out my secrets</button>\n  </body>\n  </html>\n",
                                "cooked": "\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n  </head>\n  <body>\n    <p>Logged In Successfully!</p>\n    <button onclick=\"window.location.href='/secret'\">Check out my secrets</button>\n  </body>\n  </html>\n"
                              },
                              "tail": true
                            }
                          ],
                          "expressions": []
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "get"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/login",
            "raw": "'/login'"
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "redirect"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/",
                        "raw": "'/'"
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "get"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/secret",
            "raw": "'/secret'"
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "sessionController"
            },
            "property": {
              "type": "Identifier",
              "name": "isLoggedIn"
            }
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "locals"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "session"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "redirect"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "/signup",
                          "raw": "'/signup'"
                        }
                      ]
                    }
                  },
                  "alternate": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "sendFile"
                        }
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "path"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "resolve"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "__dirname"
                            },
                            {
                              "type": "Literal",
                              "value": "../client/secret.html",
                              "raw": "'../client/secret.html'"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "get"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/secret/users",
            "raw": "'/secret/users'"
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "sessionController"
            },
            "property": {
              "type": "Identifier",
              "name": "isLoggedIn"
            }
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "userController"
            },
            "property": {
              "type": "Identifier",
              "name": "getAllUsers"
            }
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "req"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "cookies"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "ssid"
                      }
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "redirect"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "/",
                          "raw": "'/'"
                        }
                      ]
                    }
                  },
                  "alternate": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "res"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "send"
                        }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "users"
                              },
                              "computed": false,
                              "value": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "res"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "locals"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "users"
                                }
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "use"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "*",
            "raw": "'*'"
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "status"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 404,
                            "raw": "404"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "send"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "Not Found",
                        "raw": "'Not Found'"
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "use"
          }
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "err"
              },
              {
                "type": "Identifier",
                "name": "req"
              },
              {
                "type": "Identifier",
                "name": "res"
              },
              {
                "type": "Identifier",
                "name": "next"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "console"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "log"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "err"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "status"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 500,
                            "raw": "500"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "send"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "error"
                            },
                            "computed": false,
                            "value": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "kind": "init",
                            "method": false,
                            "shorthand": false
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "app"
          },
          "property": {
            "type": "Identifier",
            "name": "listen"
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "PORT"
          },
          {
            "type": "ArrowFunctionExpression",
            "id": null,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "console"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "log"
                      }
                    },
                    "arguments": [
                      {
                        "type": "TemplateLiteral",
                        "quasis": [
                          {
                            "type": "TemplateElement",
                            "value": {
                              "raw": "Listening on port ",
                              "cooked": "Listening on port "
                            },
                            "tail": false
                          },
                          {
                            "type": "TemplateElement",
                            "value": {
                              "raw": "...",
                              "cooked": "..."
                            },
                            "tail": true
                          }
                        ],
                        "expressions": [
                          {
                            "type": "Identifier",
                            "name": "PORT"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "generator": false,
            "expression": false,
            "async": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "app"
        }
      }
    }
  ],
  "sourceType": "script"
}

